{"version":3,"sources":["data.js","index.js"],"names":["Mock","mock","success","Upload","props","state","file","loading","e","stopPropagation","preventDefault","type","this","setState","isDrag","target","files","dataTransfer","test","axios","method","url","responseType","then","response","catch","error","content","Fragment","alt","className","src","URL","createObjectURL","name","value","key","id","onChange","handleChange","accept","htmlFor","onDragOver","handleDrag","onDragLeave","onDrop","onClick","handleSubmit","href","React","Component","ReactDOM","render","document","getElementById"],"mappings":"8QAEeA,EAAKC,KAAK,aAAa,OAAO,CACzCC,SAAS,I,oBC0BPC,E,YACJ,WAAYC,GAAO,IAAD,8BAChB,4CAAMA,KACDC,MAAQ,CACXC,KAAM,KACNC,QAAQ,GAJM,E,wEAOPC,GACTA,EAAEC,kBACFD,EAAEE,iBACa,aAAXF,EAAEG,KACJC,KAAKC,SAAS,CACZC,QAAQ,IAGVF,KAAKC,SAAS,CACZC,QAAQ,M,mCAKDN,GACXA,EAAEC,kBACFD,EAAEE,iBACF,IAAMJ,GAAQE,EAAEO,OAAOC,OAASR,EAAES,aAAaD,OAAO,GACtC,2BAA4BE,KAAKZ,EAAKK,OAGpDC,KAAKC,SAAS,CACVP,KAAMA,EACNQ,QAAQ,M,mCAKHN,GAAG,IAAD,OACbA,EAAEE,iBAEFS,IAAM,CACJC,OAAQ,OACRC,IAAK,aACLC,aAAc,SAEfC,MACG,SAACC,GACG,EAAKX,SAAS,CACZN,QAAQ,OAIjBkB,OACG,SAACC,S,+BAIE,IA/ESpB,EAAMC,EA+EhB,OACAoB,GAhFUrB,EAgFWM,KAAKP,MAAMC,KAhFhBC,EAgFsBK,KAAKP,MAAME,QA/ErDD,EAEA,kBAAC,IAAMsB,SAAP,KACE,yBAAKC,IAAI,YAAYC,UAAU,aAAaC,IAAKC,IAAIC,gBAAgB3B,KACrE,yBAAKwB,UAAU,YACb,yBAAKA,UAAU,WAAW,gCAASxB,EAAK4B,OACxC,8BAAUJ,UAAU,WAAWK,MAAO5B,MAM1C,kBAAC,IAAMqB,SAAP,KACE,yBAAKQ,IAAI,QAAQN,UAAU,SAC3B,4DACE,0BAAMA,UAAU,OAAhB,oBAiEN,OACE,oCACE,wBAAIA,UAAU,SAAd,0CACA,0BAAMA,UAAU,YACd,2BAAOO,GAAG,cAAcC,SAAU,SAAC9B,GAAD,OAAM,EAAK+B,aAAa/B,IAAIG,KAAK,OAAO6B,OAAO,YAC/E,2BACEC,QAAQ,cACRX,UAAYlB,KAAKP,MAAMS,OAAQ,QAAS,GACxC4B,WAAY,SAAClC,GAAD,OAAO,EAAKmC,WAAWnC,IACnCoC,YAAa,SAACpC,GAAD,OAAO,EAAKmC,WAAWnC,IACpCqC,OAAQ,SAACrC,GAAM,EAAK+B,aAAa/B,KAEhCmB,GAEH,2BAAOG,UAAU,aAAanB,KAAK,SAASwB,MAAM,SAASW,QAAS,SAACtC,GAAD,OAAO,EAAKuC,aAAavC,OAEjG,uBAAGsB,UAAU,OAAOkB,KAAK,KAAzB,a,GA1EaC,IAAMC,WAkF3BC,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,W","file":"static/js/main.aad72f54.chunk.js","sourcesContent":["import Mock from 'mockjs'\r\n\r\nexport default Mock.mock('/postdata1','post',{\r\n    success: true,\r\n})","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport './data';\r\nimport axios from 'axios'\r\n\r\nfunction getContent(file, loading){\r\n  if (file) {\r\n    return (\r\n      <React.Fragment>\r\n        <img alt='uploadimg' className='file-image' src={URL.createObjectURL(file)} />\r\n        <div className='response'>\r\n          <div className=\"message\">{<strong>{file.name}</strong>}</div>\r\n          <progress className=\"progress\" value={loading}></progress>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  } else {\r\n    return (\r\n      <React.Fragment>\r\n        <div key='start' className='start'>\r\n        <div>Select a file or drag here*</div>\r\n          <span className=\"btn\">Select a file</span>\r\n        </div>\r\n      </React.Fragment>\r\n    )\r\n  }\r\n}\r\n\r\nclass Upload extends React.Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      file: null,\r\n      loading:0,\r\n    }\r\n  }\r\n  handleDrag(e){\r\n    e.stopPropagation();\r\n    e.preventDefault();\r\n    if (e.type === 'dragover') {\r\n      this.setState({\r\n        isDrag: true\r\n      });\r\n    } else {\r\n      this.setState({\r\n        isDrag: false\r\n      });\r\n    }\r\n  }\r\n\r\n  handleChange(e){\r\n    e.stopPropagation();\r\n    e.preventDefault();\r\n    const file = (e.target.files || e.dataTransfer.files)[0];\r\n    const isGood = (/\\/(?=gif|jpg|png|jpeg)/gi).test(file.type);\r\n  \r\n    if (isGood) {\r\n      this.setState({\r\n          file: file,\r\n          isDrag: false\r\n      });\r\n    }\r\n  }\r\n\r\n  handleSubmit(e){\r\n    e.preventDefault();\r\n    //do something\r\n    axios({\r\n      method: 'post',\r\n      url: '/postdata1',\r\n      responseType: 'json',\r\n    })\r\n    .then(\r\n        (response) => {\r\n            this.setState({\r\n              loading:1\r\n            })  \r\n        }\r\n    )\r\n    .catch(\r\n        (error) => {\r\n        }\r\n    );\r\n  }\r\n  render(){\r\n    const content = getContent(this.state.file, this.state.loading);\r\n    return (\r\n      <>\r\n        <h3 className='title'>React Image Preview & Upload Component</h3>\r\n        <form className='uploader'>\r\n          <input id='file-upload' onChange={(e)=> this.handleChange(e)} type='file' accept='image/*'/>\r\n            <label \r\n              htmlFor='file-upload' \r\n              className={(this.state.isDrag)?'hover': ''} \r\n              onDragOver={(e) => this.handleDrag(e)}\r\n              onDragLeave={(e) => this.handleDrag(e)}\r\n              onDrop={(e) =>{this.handleChange(e)}}\r\n            >\r\n              {content}\r\n            </label>\r\n            <input className='btn-submit' type='submit' value='Submit' onClick={(e) => this.handleSubmit(e)}/>\r\n        </form>\r\n        <a className=\"home\" href='/'>HOME</a>\r\n      </>\r\n    );\r\n  };\r\n}\r\n\r\n// ========================================\r\n  \r\nReactDOM.render(\r\n  <Upload />,\r\n  document.getElementById('root')\r\n);"],"sourceRoot":""}